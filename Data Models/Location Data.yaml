# Data Structure:
#   Attributes (name, visited, references) are lower case  and dictionary keys (NARRATIVES, MOVES) are uppercase.
#   The LOCATIONS dictionary contains keys of each location's reference number (0, 7, 5a, 10b)
#   Those keys contain all the data about a location. Each location must have:
#       Name -- not sure this will be used in the game anyways...but I just put it there.
#       References: which the player can call a location by.
#       Visited: times the player visited that location
#       NARRATIVES: Dictionary of narratives, in which there is a long and (not always) short one. If no short, default to long narrative.
#         If a location has one long(/short) narrative set regardless of the state of anything else in the game, then the narratives are simply declared with the 'long' and 'short' keys.
#         If there are exceptions, however, then underneath the 'long' and 'short' keys will be 'general' and 'exception' keys. The 'general' key will 
#         contain the general long/short narrative, hence the word general. Any exceptions will go underneath the 'exception' key. Exceptions are based on an item's attribute. Items can be
#         locations, objects, actors, or the player. The name of the item will be the key for its set of conditions and narratives. So a location's key would be '6a' for example, and the key for
#         an object can be 'lantern'. The value under an item key is a list of lists. Each sublist is another condition/narrative set. A sublist contains a 'if' key, which holds a list of the
#         attribute name as the first value, and the attribute value that is needed in order for the narrative based on this condition to fire. The sublist also contains a 'narrative' key, which just
#         holds the narrative to play if the item's attribute value matches the value declared in the 'if' key.
#       MOVES: This dictionary contains N,E,S,W keys whose values are the location numbers that these directions take the player to. Instead of a location number, there are two other options:
#         1. A warning. It is a dictionary which contains 2 keys: 'warning' and 'yes'. The 'warning' key contains the warning message/question, and the 'yes' key which contains the location to go to if the user
#            answers positively ('yes', 'y', 'ok') to the warning question. The program will keep the user in a loop asking the warning question until the user provides either a yes-type answer or a no-type answer.
#         2. A word -- but not just any word -- this word refers to a dictionary defined with this word as the key name. This dictionary cotains a list of items, and is to be used when the game creator wants to
#            be able to print a random item from this list when the player tries to go to this location. The most prevalent example of this is a game boundary message -- it would be boring to have just one
#            message when the user hits a boundary, so the creator can define multiple messages and the program will pick one randomly from the list within the dictionary.
#            These items can be any data type (boolean, string, etc.) -- but in the game's case, the list will most likely contain strings -- messages for the player.
#         The MOVES dictionary can also contain a move_commands key, which holds a list of dictionaries, in a similar format as commands are declared in within the COMMANDS.yaml file: There is a 'words' key which contains a
#         list of the words which activate the other key, the 'direction' key. This contains either N,E,S,W, or any of the other options laid out above. The reason there is a special move_commands dictionary
#         is to allow for a case in which the user says "go out" -- and "out" is one of the move_commands. Since "out" was declared as move command, that means that the parser will realize that any verb associated with moving
#         that precedes the word "out", or any move_command, will not be looked at as a verb without a direction -- without this, if the parser saw "go out", it would see that the verb "go" is missing a direction, but since
#         "out" is a move_command, it will realize that the word "go" maps to the move command. Move commands can also be used alone.
#     Not required for a location:
#       OBJECTS: A list of the names of the objects that the location contains. Simple. *** wipes/dusts hands clean ***

intro: You open your eyes and are blinded by the ray of light coming from above.
      You look up, and see trees all around you. Realizing that you are inside the
      trunk of one of these trees, you try to stand up, but your legs are too weak.
      Crawling out of the trunk, you hear rushing water, and see that to your right,
      or east, is the edge of a cliff.


boundaries:
  - Out of bounds, this location takes you nowhere.
  - You sure you want to fall off the game? Well, you can't. Going this direction takes you nowhere;
    you have hit a game boundary.
  - One step further and you fall off the face of the flat earth; going this direction 
    takes you nowhere. You have hit a game boundary.


LOCATIONS:

####### LEVEL 1 #######

  '0':
    name: homeTrunk
    references: ['home', 'trunk', 'start']
    visited: 0
    can_enter: always
    NARRATIVES:
      long: You are inside the trunk that you first woke up in -- a tree trunk with a wide entrance that allows 
        you to fit inside. Nearby is the sound of rushing water, to your right, or east, is the edge of a cliff.
      short: You are back in the tree trunk.
      actions: 
    MOVES:
      N: &N '1'
      E: &E '3'
      S: &S '5'
      W: &W '7'
      move_commands: [
        {verbs: [exit, out, leave], direction: N},
        {verbs: [behind], direction: S}
      ]

  '1':
    name: inFrontHome
    visited: 0
    can_enter: always
    NARRATIVES:
      long: Your home trunk is now behind you. All around you are closely-knit clusters
        of trees, but to your west there seems to be a clearing of some sorts.
      short: You're in front (and outside) of your home trunk.
    OBJECTS:
    MOVES:
      N: &N boundary
      E: &E '2'
      S: &S '0'
      W: &W '8'
      move_commands: [
        {verbs: [exit, out, leave], direction: N},
        {verbs: [behind], direction: S}
        ]

  '2':
    name: cliffEdge0
    visited: 0
    can_enter: always
    NARRATIVES:
      long: 
        general:
          narrative: You are at another edge of the cliff, where you see a thrashing river far below. 
        exceptions:
        - {if: [['3', visited, 0]],
          narrative: 'You are at the edge of a cliff. Looking down, you see craggy rocks clinging
            to the sides of the mountain wall, which leads down to a frothy white river.
            Looking behind you, you see that a bridge is nearby, and it looks like it spans
            the gap between your side of the cliff and the other.'}
      short: You're at the edge of the cliff. A bridge is nearby.
    OBJECTS:
    MOVES:
      N: &N boundary
      E: &E '9'
      S: &S '3'
      W: &W '1'

  '3':
    name: cliffEdge1
    visited: 0
    can_enter: always
    NARRATIVES:
      long:
        general: You are at another edge of the cliff, where you see a thrashing river far below. 
        exceptions: 
        - {if: [['2', visited, 0]],
          narrative: 'You are at the edge of a cliff. Looking down, you see craggy rocks clinging
            to the sides of the mountain wall, which leads down to a frothy white river.
            Looking behind you, you see that a bridge is nearby, and it looks like it spans
            the gap between your side of the cliff and the other.'}
      short: You are at the edge of the cliff, which leads down to the dangerous-looking
        whitewater river. A bridge is nearby.

    OBJECTS:
    MOVES:
      N: &N '2'
      E: &E '9'
      S: &S '4'
      W: &W '0'

  '4':
    name: toBridge
    visited: 0
    can_enter: always
    NARRATIVES:
      long: You see a bridge to the east, and the sound of the rushing river below increases.
      short: You're near the bridge to the east.
    OBJECTS:
    MOVES:
      N: &N '3'
      E: &E 4a
      S: &S 10c
      W: &W '5'

  4a:
    name: bridge
    references: [bridge, overpass, walkway]
    can_enter: always
    visited: 0
    NARRATIVES:
      long:
        general: A wooden plank-bridge stretches out before you, providing a pathway across
          the chasm. One problem, though - Yes, a troll — a short ginger-haired and brown-skinned
          creature — stands guard in front, holding a rusty metal staff.
        exceptions:
        - {if: [[troll, guarding, False]],
          narrative: A wooden plank-bridge stretches out before you, providing a pathway across 
              the chasm. It is unguarded, just waiting for a passerby to cross it.}
      short:
        general: The bridge is in front of you, guarded by an ugly troll in front holding
          a metal staff.
        exceptions:
        - {if: [[troll, guarding, False]],
          narrative: The bridge stretches out in front of you, unguarded.}

    MOVES:
      N: &N '9'
      E: &E 4b
      S: &S {warning: "You sure you want to jump over the bridge? You will most definitely crack your head on a rock below.",
            yes: 10d, no: Good choice. Suicide = bad. }
      W: &W '4'
    OBJECTS: [troll]
    COMMANDS: [
        {verbs: [jump, suicide], action: [goto, S]}
      ]

  4b:
    name: acrossBridge
    visited: 0
    can_enter: 
    NARRATIVES:
      long:
        general: You are on the other side of the bridge, yay. To be continued.
        exceptions:
          - {if: [[4b, visited, 0]],
            narrative: Walking steadily across the wooden planks, you notice a figure at the other
              side -- a classically bearded, tall man, robed in silver-grey folds standing
              proud, watching you cross; almost like he is guarding the other side of the
              bridge, as if in consortium with the troll. Reaching the other side, the man
              brings his large hands together, and you hear a large rumble beneath the ground.
              All goes dark.,
            actions: [[goto, '0'], [player, change_state, can_walk, True]]}

    OBJECTS:
    MOVES:
      N: &N boundary
      E: &E boundary
      S: &S boundary
      W: &W 4a

  '5':
    name: behindHome
    visited: 0
    NARRATIVES:
      long: You are now behind your home trunk. To your east you see a bridge in the
        distance; a hopeful sign that you can maybe get across the accursed cliff.
      short: You are behind your home trunk, and to the east is the bridge.
    OBJECTS:
    MOVES:
      N: &N '0'
      E: &E '4'
      S: &S 10b
      W: &W '6'

  '6':
    name: leftBehindHome
    references: [forest, trees, woods]
    visited: 0
    NARRATIVES:
      long: Just more trees. You are surrounded.
    OBJECTS:
    MOVES:
      N: &N '7'
      E: &E '5'
      S: &S 10a
      W: &W 6a
  '10':
    name: moreTrees0
    references: [forest, trees, woods]
    visited: 0
    NARRATIVES:
      long: Just more trees. You are surrounded.
    OBJECTS:
    MOVES:
      N: &N 6a
      E: &E 10a
      S: &S boundary
      W: &W boundary

  10a:
    name: moreTrees1
    references: [forest, trees, woods]
    visited: 0
    NARRATIVES:
      long: Just more trees. You are surrounded.
    OBJECTS:
    MOVES:
      N: &N '6'
      E: &E 10b
      S: &S No go; this is the edge of the game.
      W: &W '10'
  10b:
    name: moreTrees2
    references: [forest, trees, woods]
    visited: 0
    NARRATIVES:
      long: Just more trees. You are surrounded.
    OBJECTS:
    MOVES:
      N: &N '5'
      E: &E 10c
      S: &S boundary
      W: &W 10a
  10c:
    name: moreTrees3
    references: [forest, trees, woods]
    visited: 0
    NARRATIVES:
      long: Just more trees. You are surrounded.
    OBJECTS:
    MOVES:
      N: &N '4'
      E: &E 10d
      S: &S boundary
      W: &W 10b

# FIX THIS, MAKE IT UPON ARRIVAL THE PLAYER DIES
  # 10d:
  #   name: deathFall2
  #   visited: 0
  #   state_changes:
  #     player:
  #       health: 0
  #   NARRATIVES:
  #     long: You fall of the bridge and die.

  #   MOVES:
  #     N: &N null
  #     E: &E null
  #     S: &S null
  #     W: &W null

  6a:
    name: staircase
    references: [staircase, stairs, stair]
    visited: 0
    NARRATIVES:
      long:
        general: All is dark. The ground feels marshy and wet, and squishes beneath
          your hands and knees. The air is cold here. Stretching out your hands,
          you feel cold stone.
        exceptions:
        - {if: [[lantern, lit, True]],
          narrative: The ground feels marshy and wet, and squishes beneath your hands
            and knees. By the light of your lantern, you see a stone staircase in front
            of you.}
      short:
        general: You are back in the dark, squishy, wet area.
        exceptions:
        - {if: [[lantern, lit, True]],
          narrative: You are back by the staircase with the squishy wet ground.}

    COMMANDS:
      - [climb, up, stairs, upwards]

    REACTIONS:
      climb:
        general:
          reaction: "Walking up the stairs, you slip a little, and you see that the steps
            are wet with what seems to be some kind of slime. Reaching the top of the
            staircase, you see a note."
          actions: [[goto, '@6b']]
        exceptions:
        - {if: [[player, can_walk, False]],
          reaction: "You can't climb the stairs; hell, you can't even walk! Try to do
                  that first and then come back."}

    MOVES:
      N: &N 7a
      E: &E '6'
      S: &S '10'
      W: &W boundary

  '7':
    name: leftOfHome
    visited: 0
    NARRATIVES:
      long: You see your home trunk to the east, and trees everywhere else you look.
        But you see something unexpected for a forest, nearby.
    MOVES:
      N: &N '8'
      E: &E '0'
      S: &S '6'
      W: &W 7a

  7a:
    name: toClearing0
    visited: 0
    NARRATIVES:
      long: There is a clearing straight ahead, an unpredictable bald spot among the 
        vast forest of trees.
      short: You're back near the clearing, which is straight ahead of you.
    MOVES:
      N: &N 8a
      E: &E '7'
      S: &S 6a
      W: &W 7b
  
  7b:
    name: toClearing1
    visited: 0
    NARRATIVES:
      long: You see something in the ground in a clearing among the trees ahead of you.
    MOVES:
      N: &N 8b
      E: &E 7a
      S: &S boundary
      W: &W 7a
    
  '8':
    name: toClearing2
    visited: 0
    NARRATIVES:
      long: It is clear that you are upon a clearing, a dusty circle barren of vegetation 
        or any of the trees you are so used to seeing around you.
      short: You are near the clearing.
    MOVES:
      N: &N boundary
      E: &E '1'
      S: &S '7'
      W: &W 8a

  8a:
    name: clearing
    references: [clearing]
    visited: 0
    NARRATIVES:
      long: You arrive in the clearing. A mysterious-looking silver egg lays in a small
        indentation in the ground in the middle of the clearing, and a metal lantern lies next to it.
      short: You're back in the clearing.
    OBJECTS: [egg, lantern]
    MOVES:
      N: &N boundary
      E: &E '8'
      S: &S 7a
      W: &W 8b

  8b:
    name: midClearing
    visited: 0
    NARRATIVES:
      long: You are in the middle of the clearing with the depression in the ground.
    OBJECTS: [egg, lantern]
    MOVES:
      N: &N null
      E: &E 8a
      S: &S null
      W: &W null

  '9':
    name: deathFall
    visited: 0
    state_changes:
      player:
        health: 0
    NARRATIVES:
      long: You fall 2000 feet and hit your head on a boulder at the bottom. You die.
      short:
    OBJECTS:
    MOVES:
      N: &N null
      E: &E null
      S: &S null
      W: &W null


####### LEVEL 2 #######

  '@6b':
    name: topOfStaircase
    references: [top of the stairs]
    can_enter:
      player: [can_walk, True]
    visited: 0
    NARRATIVES:
      long: You have reached the top of the stairs. Yay.
    MOVES:
      N: &N '9'
      E: &E 4b
      S: &S {warning: "You sure you want to jump over the bridge? You will most definitely crack your head on a rock below.",
            yes: 10d, no: Smart.}
      W: &W '4'